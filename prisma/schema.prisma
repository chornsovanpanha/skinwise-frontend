// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum UserRole {
  ADMIN
  EDITOR
  USER
}

enum LoginBy {
  email
  facebook
  gmail
  apple
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  altText   String?
  width     Int?
  height    Int?
  createdAt DateTime @default(now())

  userId Int?
  user   User? @relation(fields: [userId], references: [id])

  @@unique([userId, url])
}

// schema.prisma
model User {
  id                  Int                  @id @default(autoincrement())
  email               String               @unique
  password            String
  name                String?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  platform            String?
  loginBy             LoginBy              @default(email)
  role                UserRole             @default(USER)
  sessions            Session[]
  passwordResetTokens PasswordResetToken[]
  Image               Image[]
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Product {
  id     Int     @id @default(autoincrement())
  name   String
  rating Int     @default(0)
  desc   String?
  code   String
}
